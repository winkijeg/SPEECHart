function [formantOrig, formRW] = vt_aire2form(aire, fs, plot_flag)% test de base de vtn2frm_ftr_oral adapté à VLAB% Pierre BADIN mai 2006% on balaye la fonction de transfert : quadripole FANT - FLANAGAN - MRAYATI% on detecte les pics                : % on cherche un pole                 : Khaled MAWAS% on l'enleve                        : Hugo SANCHEZ% on recommence et ainsi de suite    : Pierre BADIN%% modification et nom par N. Henrich, ICP, 25/10/2006% nombre de sectionsORAL.A = aire(:,2)';ORAL.L = aire(:,1)';nbfreq = 500; Fmax = fix(fs/2.2); Fmin = Fmax / (nbfreq - 1);freqPerBin = Fmax / (nbfreq - 1);f = linspace(Fmin, Fmax, nbfreq);[H_eq, F_form] = vtn2frm_ftr_oral(ORAL, nbfreq, Fmax, Fmin);% procedure to detect poles based on derivation[formRW, ableit_H_eq] = find_formants_in_derivation(H_eq, Fmax, Fmin, freqPerBin);%------------------------------------------------------------------------------% Cleaning eventual poles / zeros redundant implementation in order and % cleaning poles / zeros beyond the Fmax (AS le 28/02/2006)seuil2 = 10;% Polesif ~isempty(F_form)	% Mise en ordre	[bid, ind_F_ord] = sort(F_form(:,2)); F_form = F_form(ind_F_ord,:);	% Nettoyage des poles superieurs a Fmax et negatifs    F_form = F_form(find((F_form(:,2) <= Fmax) & (F_form(:,2) >= 0)),:);	% Nettoyage des p?les redondants	ind_F_diffOK = find(diff(F_form(:,2)) >= seuil2);	if ~isempty(ind_F_diffOK)		ind_F_Nredondant = [ind_F_diffOK; ind_F_diffOK(end) + 1];	elseif isempty(ind_F_diffOK) & ~isempty(F_form) % if ~isempty(ind_F_diffOK)		ind_F_Nredondant = 1;	else  % if ~isempty(ind_F_diffOK)		ind_F_Nredondant = [];	end  % if ~isempty(ind_F_diffOK)	F_form = F_form(ind_F_Nredondant,:);end  % if ~isempty(F_form)if isempty(F_form); F_form = NaN * ones(1,4); end %---------------------------------------------------% Calculation of the values of the FT zeros and the poles (AS le 27/02/2006)for i_pole = 1:size(F_form,1)	F_form(i_pole, 3) = 20*log10(abs(aire2spectre_oral(ORAL, 1, ...        F_form(i_pole, 2), F_form(i_pole,2))));end%---------------------------------------------------% plottingif plot_flag    figure;     h1 = subplot(3,1,1);    stairs(cumsum(aire(:,1))-aire(1,1),aire(:,2),'Linewidth',2)    axis([0 18 0 12])    xlabel('distance from glottis (cm)','FontSize', [14],'FontWeight', 'bold'); ylabel('area  (cm^2)','FontSize', [14],'FontWeight', 'bold','Rotation', [90]);    set(h1,'FontSize', 12,'FontWeight', 'bold')    h2 = subplot(3,1,2);    plot(f/1000, 20*log10(abs(H_eq)),'.-','Linewidth',2)    axis([0 10 -20 40])        hold on; grid on;    for i_pole = 1:size(F_form,1)        plot(F_form(i_pole, 2)/1000, F_form(i_pole,3), 'ro');    end  % for i_pole = 1:size(F_form,1)    xlabel('freq (kHz)','FontSize', 14,'FontWeight', 'bold'); ylabel('amp (db)   ','FontSize', [14],'FontWeight', 'bold','Rotation', [90]);    set(h2,'FontSize', 12,'FontWeight', 'bold')    for i_pole = 1:size(formRW, 1)        line([formRW(i_pole, 1)/1000 formRW(i_pole, 1)/1000], ...            [-20 30], 'Color', 'r')    end  % for i_pole = 1:size(F_form,1)            h3 = subplot(3,1,3);    plot(f/1000, ableit_H_eq ,'.-', 'Linewidth', 2)    hold on    grid on        for i_pole = 1:size(formRW, 1)        line([formRW(i_pole, 1)/1000 formRW(i_pole, 1)/1000], ...            [-4.5 4.5], 'Color', 'r')    end  % for i_pole = 1:size(F_form,1)    axis([0 10 -5 5])endformantOrig = [F_form(:,2) F_form(:,4)];